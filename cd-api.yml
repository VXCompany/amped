trigger: 
  branches:
    include:
      - main
  paths:
    include:
    - Code/*

pr: none

pool:
  vmImage: ubuntu-latest

resources:
  containers:
  - container: zap
    image: vxcompanybv/zap2docker-ado:2.11.1

stages:

- stage: Build
  jobs:
  - job: Build
    steps: 
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'Azure ACR - yuriburger'
        repository: 'ampedapi'
        command: 'buildAndPush'
        Dockerfile: './Code/Amped.API/Dockerfile'
        buildContext: './Code'
        tags: '$(Build.BuildId)'

  
- stage: DeployTest
  jobs:
    - deployment: APIToAzure
      displayName: 'Deploy to Azure'
      environment: 'AzureTest'
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
            - task: AzureCLI@2
              displayName: 'Deploy template'
              env:
                MY_RABBITMQ_PASS: $(RABBITMQ_PASS)
                MY_REGISTRY_PASS: $(REGISTRY_PASS)
              inputs:
                azureSubscription: 'Azure MPN - yuriburger'
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  az deployment group create  `
                  --template-file $(Build.SourcesDirectory)/Infra/api.bicep `
                  --resource-group 'totallyamped.tech' `
                  --parameters containerImageApi=amped.azurecr.io/ampedapi:$(Build.BuildId) `
                  rabbitUsername=$env:RABBITMQ_USER rabbitPassword=$env:MY_RABBITMQ_PASS `
                  containerPort=80 registry=amped.azurecr.io `
                  registryUsername=$env:REGISTRY_USER registryPassword=$env:MY_REGISTRY_PASS containerImageRabbit=docker.io/rabbitmq:3-management-alpine
  dependsOn: Build
  condition: succeeded()
                  
- stage: Test
  jobs:
  - job: ZAP
    displayName: 'Vulnerability (ZAP)'
    container: zap
    steps:
    - script: |
          /zap/zap.sh -cmd -autorun $BUILD_SOURCESDIRECTORY/Test/Vulnerability/api-zap-auto.yaml
      displayName: 'Vulnerability Scan'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish report'
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/zap-report'
        artifact: 'zap-report'
        publishLocation: 'pipeline'
  - job: Load
    displayName: 'Loadtest (Azure)'
    dependsOn: ZAP
    condition: succeededOrFailed()
    steps:
    - task: AzureLoadTest@1
      displayName: 'Load Test'
      inputs:
        azureSubscription: 'Azure MPN - yuriburger'
        loadTestConfigFile: './Test/Load/api-load.yaml'
        resourceGroup: 'totallyamped.tech'
        loadTestResource: 'lt-amped-qa-westeu-001'
