# This is the workflow that will build the App source code

name: CI - App

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # and only for the Code directory of the repo
  push:
    branches: [ main ]
    paths:
    - amped-ui/**
  pull_request:
    branches: [ main ]
    paths:
    - amped-ui/**

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './amped-ui'
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - name: Install dependencies
      run: npm ci
    - name: Create env file
      run: |
        touch .env
        echo API_BOOKMARK_URL=$API_BOOKMARK_URL >> .env
        echo API_PROFILE_URL=$API_PROFILE_URL >> .env
        echo AUTH0_CALLBACK_URL=$AUTH0_CALLBACK_URL >> .env
        echo AUTH0_DOMAIN=$AUTH0_DOMAIN >> .env
        echo AUTH0_CLIENT_ID=$AUTH0_CLIENT_ID >> .env
        echo AUTH0_AUDIENCE=$AUTH0_AUDIENCE >> .env
        cat .env
      env:
        API_BOOKMARK_URL: ${{ vars.API_BOOKMARK_URL }}
        API_PROFILE_URL: ${{ vars.API_PROFILE_URL }}
        AUTH0_CALLBACK_URL: ${{ vars.AUTH0_CALLBACK_URL }}
        AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
        AUTH0_CLIENT_ID: ${{ vars.AUTH0_CLIENT_ID }}
        AUTH0_AUDIENCE: ${{ vars.AUTH0_AUDIENCE }}
    - name: Build
      run: npm run build-prod
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      with:
        projectBaseDir: './amped-ui'
        args: >
          -Dsonar.organization=vxcompany-github
          -Dsonar.projectKey=VXCompany_amped_app
          -Dsonar.sources=src
          -Dsonar.tests=src
          -Dsonar.test.inclusions=**/__tests__/**
          -Dsonar.exclusions=**/__tests__/**
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  publish_docker_images:
    needs: build
    if: GitHub.event_name != 'pull_request'
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './amped-ui'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Create env file
        run: |
          touch .env
          echo API_BOOKMARK_URL=$API_BOOKMARK_URL >> .env
          echo API_PROFILE_URL=$API_PROFILE_URL >> .env
          echo AUTH0_CALLBACK_URL=$AUTH0_CALLBACK_URL >> .env
          echo AUTH0_DOMAIN=$AUTH0_DOMAIN >> .env
          echo AUTH0_CLIENT_ID=$AUTH0_CLIENT_ID >> .env
          echo AUTH0_AUDIENCE=$AUTH0_AUDIENCE >> .env
          cat .env
        env:
          API_BOOKMARK_URL: ${{ vars.API_BOOKMARK_URL }}
          API_PROFILE_URL: ${{ vars.API_PROFILE_URL }}
          AUTH0_CALLBACK_URL: ${{ vars.AUTH0_CALLBACK_URL }}
          AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
          AUTH0_CLIENT_ID: ${{ vars.AUTH0_CLIENT_ID }}
          AUTH0_AUDIENCE: ${{ vars.AUTH0_AUDIENCE }}
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: vxcompanybv/amped-ui

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
